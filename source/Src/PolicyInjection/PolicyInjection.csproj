<Project Sdk="Microsoft.NET.Sdk">
  <Import Project="..\..\..\package.props" />

  <PropertyGroup>
    <TargetFrameworks>net45;net46;net47;netstandard2.0;netcoreapp2.0</TargetFrameworks>

    <AssemblyVersion>$(MajorVersion).0.0.0</AssemblyVersion>
    <FileVersion>$(Version).$(Revision)</FileVersion>
  </PropertyGroup>

  <PropertyGroup>
    <AssemblyName>EnterpriseLibrary.PolicyInjection</AssemblyName>
    <RootNamespace>EnterpriseLibrary.PolicyInjection</RootNamespace>
    <AssemblyTitle>Enterprise Library Policy Injection Application Block</AssemblyTitle>

    <PackageId>EnterpriseLibrary.PolicyInjection</PackageId>
    <Title>Enterprise Library Policy Injection Application Block</Title>
    <Description>The Policy Injection Application Block can be used to change the behavior of any .NET objects, in order to better manage crosscutting concerns for these objects. The policy injection is implemented through the Unity interception mechanism. The package includes call handlers for Logging, Validation and Exception Handling</Description>
    <Summary>The Policy Injection Application Block can be used to change the behavior of any .NET objects, in order to better manage crosscutting concerns for these objects.</Summary>
    <PackageTags>entlib entlib6 Enterprise Library PIAB policy injection interception aop aspect cross cutting LOB futures OSS</PackageTags>

    <SignAssembly>true</SignAssembly>
    <AssemblyOriginatorKeyFile>..\..\EnterpriseLibrary.snk</AssemblyOriginatorKeyFile>
    <DelaySign>false</DelaySign>
  </PropertyGroup>

  <PropertyGroup>
    <EntLibCommon>..\..\..\..\Common\source\Src\Common\Common.csproj</EntLibCommon>
    <EntLibLogging>..\..\..\..\Logging\source\Src\Logging\Logging.csproj</EntLibLogging>
    <EntLibExceptionHandling>..\..\..\..\ExceptionHandling\source\Src\ExceptionHandling\ExceptionHandling.csproj</EntLibExceptionHandling>
    <EntLibValidation>..\..\..\..\Validation\source\Src\Validation\Validation.csproj</EntLibValidation>
  </PropertyGroup>

  <ItemGroup>
    <ProjectReference Include="$(EntLibCommon)" Condition="Exists('$(EntLibCommon)') AND '$(EntLibDependencyType)' == 'Project'" />
    <PackageReference Include="EnterpriseLibrary.Common" Version="$(EntLibCommonVersion)" Condition="!Exists('$(EntLibCommon)') OR '$(EntLibDependencyType)' == 'Package'" />

    <ProjectReference Include="$(EntLibLogging)" Condition="Exists('$(EntLibLogging)') AND '$(EntLibDependencyType)' == 'Project'" />
    <PackageReference Include="EnterpriseLibrary.Logging" Version="$(EntLibLoggingVersion)" Condition="!Exists('$(EntLibLogging)') OR '$(EntLibDependencyType)' == 'Package'" />

    <ProjectReference Include="$(EntLibExceptionHandling)" Condition="Exists('$(EntLibExceptionHandling)') AND '$(EntLibDependencyType)' == 'Project'" />
    <PackageReference Include="EnterpriseLibrary.ExceptionHandling" Version="$(EntLibExceptionHandlingVersion)" Condition="!Exists('$(EntLibExceptionHandling)') OR '$(EntLibDependencyType)' == 'Package'" />

    <ProjectReference Include="$(EntLibValidation)" Condition="Exists('$(EntLibValidation)') AND '$(EntLibDependencyType)' == 'Project'" />
    <PackageReference Include="EnterpriseLibrary.Validation" Version="$(EntLibValidationVersion)" Condition="!Exists('$(EntLibValidation)') OR '$(EntLibDependencyType)' == 'Package'" />

    <PackageReference Include="CommonServiceLocator" Version="$(CommonServiceLocatorVersion)" />
    <PackageReference Include="Unity.Container" Version="$(UnityContainerVersion)" />
    <PackageReference Include="Unity.Configuration" Version="$(UnityConfigurationVersion)" />
    <PackageReference Include="Unity.Interception" Version="$(UnityInterceptionVersion)" />
    <PackageReference Include="Unity.Interception.Configuration" Version="$(UnityInterceptionConfigurationVersion)" />
  </ItemGroup>

  <ItemGroup Condition="'$(TargetFramework)' == 'netstandard2.0' OR '$(TargetFramework)' == 'netcoreapp2.0'">
    <PackageReference Include="System.Configuration.ConfigurationManager" Version="$(SystemConfigurationConfigurationManagerVersion)" />
    <PackageReference Include="System.ComponentModel.Annotations" Version="$(SystemComponentModelAnnotationsVersion)" />
  </ItemGroup>

  <ItemGroup Condition="'$(TargetFramework)' != 'netstandard2.0' AND '$(TargetFramework)' != 'netcoreapp2.0'">
    <Reference Include="System.ComponentModel.DataAnnotations" />
    <Reference Include="System.Configuration" />
    <Reference Include="System.Configuration.Install" />
  </ItemGroup>

  <ItemGroup>
    <Compile Include="..\..\GlobalAssemblyInfo.cs">
      <Link>GlobalAssemblyInfo.cs</Link>
    </Compile>

    <None Include="..\..\PolicyInjection.licenseheader">
      <Link>PolicyInjection.licenseheader</Link>
    </None>

    <Compile Update="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>

    <Compile Update="Configuration\DesignResources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
      <DependentUpon>DesignResources.resx</DependentUpon>
    </Compile>

    <EmbeddedResource Update="Configuration\DesignResources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>DesignResources.Designer.cs</LastGenOutput>
      <SubType>Designer</SubType>
    </EmbeddedResource>

    <EmbeddedResource Update="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
      <SubType>Designer</SubType>
    </EmbeddedResource>
  </ItemGroup>

  <ItemGroup>
    <Content Include="..\..\NuGet\Readme.txt">
      <Pack>true</Pack>
      <Visible>False</Visible>
      <PackagePath></PackagePath>
    </Content>

    <Content Include="..\..\NuGet\tools\SharedCommon\install.ps1">
      <Pack>true</Pack>
      <Visible>False</Visible>
      <PackagePath>tools</PackagePath>
    </Content>

    <Content Include="..\..\NuGet\tools\SharedCommon\Utils.psm1">
      <Pack>true</Pack>
      <Visible>False</Visible>
      <PackagePath>tools</PackagePath>
    </Content>
  </ItemGroup>

  <ItemGroup Condition="'$(TargetFramework)' == 'netstandard2.0' OR '$(TargetFramework)' == 'netcoreapp2.0'">
    <Compile Remove="**\*PerformanceCounter*.cs" />
  </ItemGroup>

  <ItemGroup Condition="'$(TargetFramework)' != 'netstandard2.0' AND '$(TargetFramework)' != 'netcoreapp2.0'">

  </ItemGroup>

  <PropertyGroup>
    <OutputPath>$(SolutionDir)..\bin\$(Configuration)\</OutputPath>
    <DocumentationFile>$(SolutionDir)..\bin\$(Configuration)\$(AssemblyName).xml</DocumentationFile>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <GeneratePackageOnBuild>false</GeneratePackageOnBuild>
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <TreatWarningsAsErrors>true</TreatWarningsAsErrors>
    <Prefer32Bit>false</Prefer32Bit>
    <CodeAnalysisRuleSet>..\..\EnterpriseLibrary.ruleset</CodeAnalysisRuleSet>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <GeneratePackageOnBuild>true</GeneratePackageOnBuild>
    <DebugType>pdbonly</DebugType>
    <Optimize>true</Optimize>
    <DefineConstants>TRACE</DefineConstants>
    <DebugSymbols>true</DebugSymbols>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <DebugType>full</DebugType>
    <TreatWarningsAsErrors>true</TreatWarningsAsErrors>
    <Prefer32Bit>false</Prefer32Bit>
  </PropertyGroup>
</Project>